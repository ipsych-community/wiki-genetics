[
["index.html", "Welcome to the iPSYCH community wiki! How to contribute? Guidelines Contributing new pages License", " Welcome to the iPSYCH community wiki! This wiki aims at gathering and building knowledge about best practices for genetic analyses, particularly of the iPSYCH data. Learn more about iPSYCH there: https://ipsych.dk/en/. Remember that this is a public space, make sure not to disclose any information that would breach ethics approvals of the data. How to contribute? Small (but useful!) contributions: opening an issue about some missing/unclear information; whenever you have to search for some question or someone ask you a question about genetic analyses or/and iPSYCH data, please open an issue here to document that this piece of information is missing to this wiki participating in topic discussions (in issues), e.g. mentioning missing information, useful references or external links clarifying a point in a wiki page by adding a few sentences correcting typos Larger contributions: making wiki pages reviewing wiki pages (including code), by someone who is not expert in the corresponding topic Guidelines be nice with others and welcoming to new contributors always open a new issue when you think about missing information (it does not have to be you that add the missing information afterwards) each page should have is own corresponding issue split the issues and pages as much as possible, e.g. making a GWAS using PLINK and making a GWAS using BOLT are two different issues and pages for complex analyses (all main ones basically), it would be good to work within teams (of e.g. two people) Contributing new pages See the new file example. At the beginning of each R Markdown file, we should have the following code block to include both chunk options and spelling check. ```{r setup, include=FALSE} # Global {knitr} options source(&quot;knitr-options.R&quot;) knitr::opts_chunk$set() # Spelling check WORDS_TO_IGNORE &lt;- c() source(&quot;spelling-check.R&quot;) ``` Each new page should go into its own new R Markdown file. You should add this new file to the (ordered) list of files to render in rmd_files: in file _booldown.yml. The title of this new file should be an header (#) and sections should have header 2 (##). Include the (PART) section header only if this new page is the first one of a new part (collection of pages). License This material is licensed under the Creative Commons Attribution-ShareAlike 3.0 License. "],
["page-example.html", "1 Page example", " 1 Page example See section Contributing new pages. "],
["how-to-setup-a-local-github-git-workflow.html", "2 How to setup a local GitHub-git workflow 2.1 Fork the repository 2.2 Sync original repo 2.3 Make a pull request to the original repo", " 2 How to setup a local GitHub-git workflow There are many advantages of setting up a local Git repository, with the first being the ability to work on your files without the fear of losing internet connection, which could risk all of your most recent changes to be lost. 2.1 Fork the repository The great thing with forking a repository is the ability to make pull requests, which is an excellent way for people without write permission to contribute code and comments, which can be reviewed and accepted by the maintainers of a certain repository. To fork the https://github.com/ipsych-community/wiki-genetics repository, visit the project page on GitHub and click on the top right icon which says fork. Now that you have forked the repository you can clone it like any other repository. 2.2 Sync original repo To get the latest changes directly to your local repository, you have to set the original repository as an upstream remote. # Check registered remotes git remote -v # Add new remote as upstream git remote add upstream git@github.com:ipsych-community/wiki-genetics.git # Check registered remotes git remote -v # Check for changes git fetch upstream # Merge new changes git merge upstream/master # Merge new changes git merge upstream/master 2.3 Make a pull request to the original repo After making changes to the local fork, you would probably want to merge into the original repository. To do that, you first have to push your changes to your own fork on GitHub, and then visit the original repo and click the pull request button. # Add and commit new changes git add newFile modifiedFile git commit -m &quot;changed xx to improve xx&quot; # Sync forked repo git pull git push # now visit original repo on GitHub and make pull request If the maintainer things your changes are good they will be accepted and incorporated into the original code-base. Good luck! "]
]
